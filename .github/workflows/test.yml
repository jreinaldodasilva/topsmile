name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  backend-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
      
      - name: Run backend tests
        run: cd backend && npm run test:coverage
        env:
          NODE_ENV: test
          DATABASE_URL: mongodb://localhost:27017/topsmile_test
          REDIS_URL: redis://localhost:6379
          TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
          TEST_PATIENT_JWT_SECRET: ${{ secrets.TEST_PATIENT_JWT_SECRET }}
          TEST_DEFAULT_PASSWORD: ${{ secrets.TEST_DEFAULT_PASSWORD }}
          TEST_PATIENT_PASSWORD: ${{ secrets.TEST_PATIENT_PASSWORD }}
          TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}
      
      - name: Upload backend coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./backend/coverage/lcov.info
          flags: backend
          name: backend-coverage
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: backend-test-results
          path: backend/reports/junit-backend.xml

  frontend-tests:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run frontend tests
        run: npm run test:frontend:ci
        env:
          CI: true
      
      - name: Upload frontend coverage
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/frontend/lcov.info
          flags: frontend
          name: frontend-coverage
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: frontend-test-results
          path: reports/junit-frontend.xml

  e2e-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017
      redis:
        image: redis:7
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
      
      - name: Build frontend
        run: npm run build
      
      - name: Start backend
        run: |
          cd backend
          npm run build
          npm start &
          npx wait-on http://localhost:5000/api/health
        env:
          NODE_ENV: test
          DATABASE_URL: mongodb://localhost:27017/topsmile_e2e
          REDIS_URL: redis://localhost:6379
          TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
          TEST_PATIENT_JWT_SECRET: ${{ secrets.TEST_PATIENT_JWT_SECRET }}
      
      - name: Start frontend
        run: |
          npx serve -s build -p 3000 &
          npx wait-on http://localhost:3000
      
      - name: Run Cypress tests
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          headed: false
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      
      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      
      - name: Upload videos
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: cypress-videos
          path: cypress/videos

  security-tests:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6
        ports:
          - 27017:27017

    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci
      
      - name: Run security tests
        run: cd backend && npm test -- --testPathPattern=security
        env:
          NODE_ENV: test
          DATABASE_URL: mongodb://localhost:27017/topsmile_security_test
          TEST_JWT_SECRET: ${{ secrets.TEST_JWT_SECRET }}
          TEST_PATIENT_JWT_SECRET: ${{ secrets.TEST_PATIENT_JWT_SECRET }}
          TEST_DEFAULT_PASSWORD: ${{ secrets.TEST_DEFAULT_PASSWORD }}
          TEST_PATIENT_PASSWORD: ${{ secrets.TEST_PATIENT_PASSWORD }}
          TEST_ADMIN_PASSWORD: ${{ secrets.TEST_ADMIN_PASSWORD }}