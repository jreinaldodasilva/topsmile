<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="16" failures="12" errors="0" time="28.482">
  <testsuite name="SchedulingService" errors="0" failures="12" skipped="0" timestamp="2025-09-12T16:51:18" time="28.108" tests="16">
    <testcase classname="SchedulingService createAppointment should create appointment successfully" name="SchedulingService createAppointment should create appointment successfully" time="5.045">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:76:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService createAppointment should return error for invalid appointment type" name="SchedulingService createAppointment should return error for invalid appointment type" time="0.97">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Tipo de agendamento não encontrado&quot;
Received: &quot;Transaction numbers are only allowed on a replica set member or mongos&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:95:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService createAppointment should return error for inactive provider" name="SchedulingService createAppointment should return error for inactive provider" time="0.96">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Profissional não encontrado ou inativo&quot;
Received: &quot;Transaction numbers are only allowed on a replica set member or mongos&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:129:36)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService createAppointment should return error for time conflict" name="SchedulingService createAppointment should return error for time conflict" time="0.788">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:144:35)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService rescheduleAppointment should reschedule appointment successfully" name="SchedulingService rescheduleAppointment should reschedule appointment successfully" time="0.757">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:176:36)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService rescheduleAppointment should return error for non-existent appointment" name="SchedulingService rescheduleAppointment should return error for non-existent appointment" time="0.635">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Agendamento não encontrado&quot;
Received: &quot;Transaction numbers are only allowed on a replica set member or mongos&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:205:39)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService cancelAppointment should cancel appointment successfully" name="SchedulingService cancelAppointment should cancel appointment successfully" time="0.556">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:222:36)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService cancelAppointment should prevent cancelling completed appointment" name="SchedulingService cancelAppointment should prevent cancelling completed appointment" time="0.585">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:247:36)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getAvailableSlots should return available time slots" name="SchedulingService getAvailableSlots should return available time slots" time="0.536">
      <failure>Error: expect(received).toBeGreaterThan(expected)

Expected: &gt; 0
Received:   0
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:274:29)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getAvailableSlots should return empty array for non-existent appointment type" name="SchedulingService getAvailableSlots should return empty array for non-existent appointment type" time="0.522">
    </testcase>
    <testcase classname="SchedulingService getAvailableSlots should return empty array when no providers available" name="SchedulingService getAvailableSlots should return empty array when no providers available" time="0.526">
    </testcase>
    <testcase classname="SchedulingService getAppointments should return appointments within date range" name="SchedulingService getAppointments should return appointments within date range" time="0.556">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 2
Received: 0
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:352:29)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getAppointments should filter by provider and status" name="SchedulingService getAppointments should filter by provider and status" time="0.562">
    </testcase>
    <testcase classname="SchedulingService getAppointmentConflicts should return no conflicts when slot is available" name="SchedulingService getAppointmentConflicts should return no conflicts when slot is available" time="0.535">
    </testcase>
    <testcase classname="SchedulingService getAppointmentConflicts should return conflicts when appointments overlap" name="SchedulingService getAppointmentConflicts should return conflicts when appointments overlap" time="0.551">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:412:34)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getProviderUtilization should calculate provider utilization correctly" name="SchedulingService getProviderUtilization should calculate provider utilization correctly" time="0.55">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;_id&apos;)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:443:62)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
  </testsuite>
</testsuites>