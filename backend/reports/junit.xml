<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="189" failures="68" errors="0" time="280.819">
  <testsuite name="ProviderService" errors="0" failures="4" skipped="0" timestamp="2025-09-12T13:33:19" time="69.872" tests="42">
    <testcase classname="ProviderService createProvider should create a new provider successfully" name="ProviderService createProvider should create a new provider successfully" time="6.325">
    </testcase>
    <testcase classname="ProviderService createProvider should create provider with default working hours" name="ProviderService createProvider should create provider with default working hours" time="0.956">
    </testcase>
    <testcase classname="ProviderService createProvider should create provider with custom working hours" name="ProviderService createProvider should create provider with custom working hours" time="0.957">
    </testcase>
    <testcase classname="ProviderService createProvider should create provider linked to user account" name="ProviderService createProvider should create provider linked to user account" time="0.899">
    </testcase>
    <testcase classname="ProviderService createProvider should create provider with appointment types" name="ProviderService createProvider should create provider with appointment types" time="0.979">
    </testcase>
    <testcase classname="ProviderService createProvider should throw error for duplicate email in same clinic" name="ProviderService createProvider should throw error for duplicate email in same clinic" time="0.858">
    </testcase>
    <testcase classname="ProviderService createProvider should throw error for invalid clinic ID" name="ProviderService createProvider should throw error for invalid clinic ID" time="0.647">
    </testcase>
    <testcase classname="ProviderService createProvider should throw error for missing required fields" name="ProviderService createProvider should throw error for missing required fields" time="0.647">
    </testcase>
    <testcase classname="ProviderService createProvider should throw error for user from different clinic" name="ProviderService createProvider should throw error for user from different clinic" time="1.2">
      <failure>MongoServerError: E11000 duplicate key error collection: test.users index: email_1 dup key: { email: &quot;test@example.com&quot; }
    at InsertOneOperation.execute (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/insert.ts:88:13)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at tryOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:283:14)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:115:12)
    at Collection.insertOne (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:286:12)</failure>
    </testcase>
    <testcase classname="ProviderService createProvider should throw error for user already linked to another provider" name="ProviderService createProvider should throw error for user already linked to another provider" time="0.751">
    </testcase>
    <testcase classname="ProviderService getProviderById should return provider by ID with populated fields" name="ProviderService getProviderById should return provider by ID with populated fields" time="0.862">
    </testcase>
    <testcase classname="ProviderService getProviderById should return null for non-existent provider" name="ProviderService getProviderById should return null for non-existent provider" time="0.62">
    </testcase>
    <testcase classname="ProviderService getProviderById should throw error for invalid provider ID" name="ProviderService getProviderById should throw error for invalid provider ID" time="0.616">
    </testcase>
    <testcase classname="ProviderService updateProvider should update provider successfully" name="ProviderService updateProvider should update provider successfully" time="0.717">
    </testcase>
    <testcase classname="ProviderService updateProvider should update provider with user link" name="ProviderService updateProvider should update provider with user link" time="0.719">
    </testcase>
    <testcase classname="ProviderService updateProvider should update provider with appointment types" name="ProviderService updateProvider should update provider with appointment types" time="0.697">
    </testcase>
    <testcase classname="ProviderService updateProvider should return null for non-existent provider" name="ProviderService updateProvider should return null for non-existent provider" time="0.615">
      <failure>Error: Profissional n√£o encontrado
    at ProviderService.updateProvider (/home/rebelde/development/topsmile/backend/src/services/providerService.ts:190:23)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/providerService.test.ts:329:22)</failure>
    </testcase>
    <testcase classname="ProviderService updateProvider should throw error for duplicate email update" name="ProviderService updateProvider should throw error for duplicate email update" time="0.78">
    </testcase>
    <testcase classname="ProviderService deleteProvider should delete provider successfully (soft delete)" name="ProviderService deleteProvider should delete provider successfully (soft delete)" time="0.996">
    </testcase>
    <testcase classname="ProviderService deleteProvider should return false for non-existent provider" name="ProviderService deleteProvider should return false for non-existent provider" time="1.239">
    </testcase>
    <testcase classname="ProviderService deleteProvider should throw error for invalid provider ID" name="ProviderService deleteProvider should throw error for invalid provider ID" time="0.751">
    </testcase>
    <testcase classname="ProviderService searchProviders should search providers by name" name="ProviderService searchProviders should search providers by name" time="0.778">
    </testcase>
    <testcase classname="ProviderService searchProviders should search providers by email" name="ProviderService searchProviders should search providers by email" time="0.785">
    </testcase>
    <testcase classname="ProviderService searchProviders should search providers by specialty" name="ProviderService searchProviders should search providers by specialty" time="0.76">
    </testcase>
    <testcase classname="ProviderService searchProviders should filter by specialties array" name="ProviderService searchProviders should filter by specialties array" time="0.774">
    </testcase>
    <testcase classname="ProviderService searchProviders should return all providers when no search term" name="ProviderService searchProviders should return all providers when no search term" time="0.78">
    </testcase>
    <testcase classname="ProviderService searchProviders should paginate results" name="ProviderService searchProviders should paginate results" time="0.783">
    </testcase>
    <testcase classname="ProviderService searchProviders should sort results" name="ProviderService searchProviders should sort results" time="0.737">
    </testcase>
    <testcase classname="ProviderService getProvidersByClinic should return all active providers for clinic" name="ProviderService getProvidersByClinic should return all active providers for clinic" time="0.744">
    </testcase>
    <testcase classname="ProviderService getProvidersByClinic should return inactive providers when specified" name="ProviderService getProvidersByClinic should return inactive providers when specified" time="0.76">
    </testcase>
    <testcase classname="ProviderService getProvidersByClinic should throw error for invalid clinic ID" name="ProviderService getProvidersByClinic should throw error for invalid clinic ID" time="0.73">
    </testcase>
    <testcase classname="ProviderService updateWorkingHours should update working hours successfully" name="ProviderService updateWorkingHours should update working hours successfully" time="0.856">
    </testcase>
    <testcase classname="ProviderService updateWorkingHours should return null for non-existent provider" name="ProviderService updateWorkingHours should return null for non-existent provider" time="0.639">
    </testcase>
    <testcase classname="ProviderService updateAppointmentTypes should update appointment types successfully" name="ProviderService updateAppointmentTypes should update appointment types successfully" time="0.711">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

- Expected  - 1
+ Received  + 7

- 68c4215d15f7968d82ee0c9f
+ {
+   _id: new ObjectId(&apos;68c4215d15f7968d82ee0c9f&apos;),
+   name: &apos;Consulta Geral&apos;,
+   duration: 60,
+   color: &apos;#3B82F6&apos;,
+   category: &apos;consultation&apos;
+ }
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/providerService.test.ts:617:54)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="ProviderService updateAppointmentTypes should throw error for invalid appointment type ID" name="ProviderService updateAppointmentTypes should throw error for invalid appointment type ID" time="0.665">
    </testcase>
    <testcase classname="ProviderService getProviderStats should return correct provider statistics" name="ProviderService getProviderStats should return correct provider statistics" time="0.82">
    </testcase>
    <testcase classname="ProviderService getProviderStats should return specialty breakdown" name="ProviderService getProviderStats should return specialty breakdown" time="0.798">
    </testcase>
    <testcase classname="ProviderService getProviderStats should throw error for invalid clinic ID" name="ProviderService getProviderStats should throw error for invalid clinic ID" time="0.747">
    </testcase>
    <testcase classname="ProviderService reactivateProvider should reactivate inactive provider" name="ProviderService reactivateProvider should reactivate inactive provider" time="0.928">
    </testcase>
    <testcase classname="ProviderService reactivateProvider should throw error for non-existent provider" name="ProviderService reactivateProvider should throw error for non-existent provider" time="0.634">
    </testcase>
    <testcase classname="ProviderService reactivateProvider should throw error for active provider" name="ProviderService reactivateProvider should throw error for active provider" time="0.643">
    </testcase>
    <testcase classname="ProviderService reactivateProvider should throw error for duplicate email when reactivating" name="ProviderService reactivateProvider should throw error for duplicate email when reactivating" time="0.697">
      <failure>Error: J√° existe um profissional ativo com este e-mail nesta cl√≠nica
    at ProviderService.createProvider (/home/rebelde/development/topsmile/backend/src/services/providerService.ts:94:27)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/providerService.test.ts:755:30)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Auth Routes Integration" errors="0" failures="1" skipped="0" timestamp="2025-09-12T13:34:29" time="28.165" tests="13">
    <testcase classname="Auth Routes Integration POST /api/auth/register should register a new user successfully" name="Auth Routes Integration POST /api/auth/register should register a new user successfully" time="5.87">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/register should return 400 for invalid data" name="Auth Routes Integration POST /api/auth/register should return 400 for invalid data" time="1.015">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/register should return 400 for duplicate email" name="Auth Routes Integration POST /api/auth/register should return 400 for duplicate email" time="0.993">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/login should login user successfully" name="Auth Routes Integration POST /api/auth/login should login user successfully" time="1.621">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/login should return 400 for missing credentials" name="Auth Routes Integration POST /api/auth/login should return 400 for missing credentials" time="0.819">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/login should return 401 for invalid credentials" name="Auth Routes Integration POST /api/auth/login should return 401 for invalid credentials" time="0.686">
    </testcase>
    <testcase classname="Auth Routes Integration GET /api/auth/me should return current user profile" name="Auth Routes Integration GET /api/auth/me should return current user profile" time="0.61">
      <failure>TypeError: Cannot read properties of undefined (reading &apos;email&apos;)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/authRoutes.test.ts:138:38)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Auth Routes Integration GET /api/auth/me should return 401 for invalid token" name="Auth Routes Integration GET /api/auth/me should return 401 for invalid token" time="0.625">
    </testcase>
    <testcase classname="Auth Routes Integration PATCH /api/auth/change-password should change password successfully" name="Auth Routes Integration PATCH /api/auth/change-password should change password successfully" time="1.671">
    </testcase>
    <testcase classname="Auth Routes Integration PATCH /api/auth/change-password should return 400 for invalid new password" name="Auth Routes Integration PATCH /api/auth/change-password should return 400 for invalid new password" time="0.595">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/logout should logout user successfully" name="Auth Routes Integration POST /api/auth/logout should logout user successfully" time="0.598">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/refresh should refresh access token successfully" name="Auth Routes Integration POST /api/auth/refresh should refresh access token successfully" time="1.228">
    </testcase>
    <testcase classname="Auth Routes Integration POST /api/auth/refresh should return 401 for invalid refresh token" name="Auth Routes Integration POST /api/auth/refresh should return 401 for invalid refresh token" time="0.607">
    </testcase>
  </testsuite>
  <testsuite name="Patient Portal Integration Tests" errors="0" failures="19" skipped="0" timestamp="2025-09-12T13:34:57" time="15.709" tests="22">
    <testcase classname="Patient Portal Integration Tests should register a new patient user" name="Patient Portal Integration Tests should register a new patient user" time="5.432">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 400
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:42:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should login patient user and return access token" name="Patient Portal Integration Tests should login patient user and return access token" time="0.947">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 400
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:53:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should get patient user info with valid token" name="Patient Portal Integration Tests should get patient user info with valid token" time="1.324">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:63:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should get upcoming appointments for patient" name="Patient Portal Integration Tests should get upcoming appointments for patient" time="0.41">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:73:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle invalid login credentials" name="Patient Portal Integration Tests should handle invalid login credentials" time="0.177">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 401
Received: 400
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:85:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should logout patient user successfully" name="Patient Portal Integration Tests should logout patient user successfully" time="0.135">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:93:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should reject requests with invalid token" name="Patient Portal Integration Tests should reject requests with invalid token" time="0.12">
    </testcase>
    <testcase classname="Patient Portal Integration Tests should reject requests without token" name="Patient Portal Integration Tests should reject requests without token" time="0.158">
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle appointment booking with valid data" name="Patient Portal Integration Tests should handle appointment booking with valid data" time="0.153">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 201
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:127:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle appointment cancellation" name="Patient Portal Integration Tests should handle appointment cancellation" time="0.118">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:139:31)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle patient profile updates" name="Patient Portal Integration Tests should handle patient profile updates" time="0.188">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 404
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:172:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle password reset request" name="Patient Portal Integration Tests should handle password reset request" time="0.174">
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle rate limiting on auth endpoints" name="Patient Portal Integration Tests should handle rate limiting on auth endpoints" time="0.356">
      <failure>Error: expect(received).toBeGreaterThan(expected)

Expected: &gt; 0
Received:   0
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:202:41)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle concurrent session management" name="Patient Portal Integration Tests should handle concurrent session management" time="0.156">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 400
    at /home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:223:30
    at Array.forEach (&lt;anonymous&gt;)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:222:18)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle appointment rescheduling" name="Patient Portal Integration Tests should handle appointment rescheduling" time="0.152">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:249:31)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle patient medical history retrieval" name="Patient Portal Integration Tests should handle patient medical history retrieval" time="0.153">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:273:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle appointment type listing" name="Patient Portal Integration Tests should handle appointment type listing" time="0.17">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:282:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle provider availability checking" name="Patient Portal Integration Tests should handle provider availability checking" time="0.117">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 200
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:299:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle error responses gracefully" name="Patient Portal Integration Tests should handle error responses gracefully" time="0.154">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: 404
Received: 401
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:308:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle CORS headers properly" name="Patient Portal Integration Tests should handle CORS headers properly" time="0.064">
      <failure>Error: expect(received).toBeDefined()

Received: undefined
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:320:56)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle large request payloads" name="Patient Portal Integration Tests should handle large request payloads" time="0.068">
      <failure>Error: expect(received).toContain(expected) // indexOf

Expected value: 401
Received array: [200, 201, 400, 413]
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:341:34)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="Patient Portal Integration Tests should handle database connection errors gracefully" name="Patient Portal Integration Tests should handle database connection errors gracefully" time="0.069">
      <failure>Error: expect(received).toContain(expected) // indexOf

Expected value: 401
Received array: [200, 500]
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/patientPortal.test.ts:353:24)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Security Tests" errors="0" failures="1" skipped="0" timestamp="2025-09-12T13:35:13" time="14.215" tests="7">
    <testcase classname="Security Tests Token Expiration should handle expired tokens" name="Security Tests Token Expiration should handle expired tokens" time="2.652">
    </testcase>
    <testcase classname="Security Tests Token Expiration should handle malformed tokens" name="Security Tests Token Expiration should handle malformed tokens" time="0.863">
    </testcase>
    <testcase classname="Security Tests Token Expiration should handle missing tokens" name="Security Tests Token Expiration should handle missing tokens" time="0.703">
    </testcase>
    <testcase classname="Security Tests Input Validation &amp; Sanitization should handle extremely long input strings" name="Security Tests Input Validation &amp; Sanitization should handle extremely long input strings" time="0.683">
    </testcase>
    <testcase classname="Security Tests Input Validation &amp; Sanitization should handle SQL injection attempts" name="Security Tests Input Validation &amp; Sanitization should handle SQL injection attempts" time="0.611">
      <failure>Error: expected 401 &quot;Unauthorized&quot;, got 400 &quot;Bad Request&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/integration/security.test.ts:91:10)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)
----
    at Test._assertStatus (/home/rebelde/development/topsmile/backend/node_modules/supertest/lib/test.js:309:14)
    at /home/rebelde/development/topsmile/backend/node_modules/supertest/lib/test.js:365:13
    at Test._assertFunction (/home/rebelde/development/topsmile/backend/node_modules/supertest/lib/test.js:342:13)
    at Test.assert (/home/rebelde/development/topsmile/backend/node_modules/supertest/lib/test.js:195:23)
    at localAssert (/home/rebelde/development/topsmile/backend/node_modules/supertest/lib/test.js:138:14)
    at Server.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/node_modules/supertest/lib/test.js:152:11)
    at Object.onceWrapper (node:events:633:28)
    at Server.emit (node:events:519:28)
    at emitCloseNT (node:net:2419:8)
    at processTicksAndRejections (node:internal/process/task_queues:89:21)</failure>
    </testcase>
    <testcase classname="Security Tests Input Validation &amp; Sanitization should handle XSS attempts" name="Security Tests Input Validation &amp; Sanitization should handle XSS attempts" time="0.885">
    </testcase>
    <testcase classname="Security Tests Rate Limiting should handle rapid successive requests" name="Security Tests Rate Limiting should handle rapid successive requests" time="1.181">
    </testcase>
  </testsuite>
  <testsuite name="Error Boundary Tests" errors="0" failures="6" skipped="0" timestamp="2025-09-12T13:35:28" time="10.909" tests="6">
    <testcase classname="Error Boundary Tests Database Connection Failures should handle database disconnection gracefully" name="Error Boundary Tests Database Connection Failures should handle database disconnection gracefully" time="0.773">
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.deleteMany (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:458:34)
    at NativeCollection.&lt;computed&gt; [as deleteMany] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/setup.ts:42:22)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:254:5)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="Error Boundary Tests Database Connection Failures should handle database connection timeout" name="Error Boundary Tests Database Connection Failures should handle database connection timeout" time="0.533">
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.insertOne (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:286:34)
    at NativeCollection.&lt;computed&gt; [as insertOne] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at model.Object.&lt;anonymous&gt;.Model.$__handleSave (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:374:33)
    at model.Object.&lt;anonymous&gt;.Model.$__save (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:496:8)
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:387:18
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:113:15
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.deleteMany (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:458:34)
    at NativeCollection.&lt;computed&gt; [as deleteMany] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/setup.ts:42:22)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:254:5)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="Error Boundary Tests External Service Failures should handle external API failures" name="Error Boundary Tests External Service Failures should handle external API failures" time="0.545">
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.insertOne (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:286:34)
    at NativeCollection.&lt;computed&gt; [as insertOne] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at model.Object.&lt;anonymous&gt;.Model.$__handleSave (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:374:33)
    at model.Object.&lt;anonymous&gt;.Model.$__save (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:496:8)
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:387:18
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:113:15
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.deleteMany (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:458:34)
    at NativeCollection.&lt;computed&gt; [as deleteMany] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/setup.ts:42:22)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:254:5)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="Error Boundary Tests Malformed Requests should handle malformed JSON" name="Error Boundary Tests Malformed Requests should handle malformed JSON" time="0.547">
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.insertOne (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:286:34)
    at NativeCollection.&lt;computed&gt; [as insertOne] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at model.Object.&lt;anonymous&gt;.Model.$__handleSave (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:374:33)
    at model.Object.&lt;anonymous&gt;.Model.$__save (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:496:8)
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:387:18
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:113:15
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.deleteMany (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:458:34)
    at NativeCollection.&lt;computed&gt; [as deleteMany] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/setup.ts:42:22)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:254:5)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="Error Boundary Tests Malformed Requests should handle oversized payloads" name="Error Boundary Tests Malformed Requests should handle oversized payloads" time="0.538">
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.insertOne (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:286:34)
    at NativeCollection.&lt;computed&gt; [as insertOne] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at model.Object.&lt;anonymous&gt;.Model.$__handleSave (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:374:33)
    at model.Object.&lt;anonymous&gt;.Model.$__save (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:496:8)
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:387:18
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:113:15
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.deleteMany (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:458:34)
    at NativeCollection.&lt;computed&gt; [as deleteMany] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/setup.ts:42:22)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:254:5)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="Error Boundary Tests Concurrent Request Handling should handle multiple concurrent requests" name="Error Boundary Tests Concurrent Request Handling should handle multiple concurrent requests" time="0.704">
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.insertOne (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:286:34)
    at NativeCollection.&lt;computed&gt; [as insertOne] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at model.Object.&lt;anonymous&gt;.Model.$__handleSave (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:374:33)
    at model.Object.&lt;anonymous&gt;.Model.$__save (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/model.js:496:8)
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:387:18
    at /home/rebelde/development/topsmile/backend/node_modules/kareem/index.js:113:15
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
      <failure>MongoNotConnectedError: Client must be connected before running operations
    at autoConnect (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:135:13)
    at executeOperation (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/operations/execute_operation.ts:69:25)
    at Collection.deleteMany (/home/rebelde/development/topsmile/backend/node_modules/mongodb/src/collection.ts:458:34)
    at NativeCollection.&lt;computed&gt; [as deleteMany] (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/drivers/node-mongodb-native/collection.js:246:33)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/setup.ts:42:22)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusHook (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:281:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:254:5)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
  </testsuite>
  <testsuite name="SchedulingService" errors="0" failures="14" skipped="0" timestamp="2025-09-12T13:35:38" time="8.217" tests="16">
    <testcase classname="SchedulingService createAppointment should create appointment successfully" name="SchedulingService createAppointment should create appointment successfully" time="0.075">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:146:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService createAppointment should return error for invalid appointment type" name="SchedulingService createAppointment should return error for invalid appointment type" time="0.013">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Tipo de agendamento n√£o encontrado&quot;
Received: &quot;Profissional n√£o encontrado ou inativo&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:164:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService createAppointment should return error for inactive provider" name="SchedulingService createAppointment should return error for inactive provider" time="0.008">
    </testcase>
    <testcase classname="SchedulingService createAppointment should return error for time conflict" name="SchedulingService createAppointment should return error for time conflict" time="0.007">
      <failure>Error: expect(received).toContain(expected) // indexOf

Expected substring: &quot;Hor√°rio n√£o dispon√≠vel&quot;
Received string:    &quot;Profissional n√£o encontrado ou inativo&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:236:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService rescheduleAppointment should reschedule appointment successfully" name="SchedulingService rescheduleAppointment should reschedule appointment successfully" time="0.013">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:275:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService rescheduleAppointment should return error for non-existent appointment" name="SchedulingService rescheduleAppointment should return error for non-existent appointment" time="0.017">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;Agendamento n√£o encontrado&quot;
Received: &quot;Cannot read properties of undefined (reading &apos;toString&apos;)&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:292:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService cancelAppointment should cancel appointment successfully" name="SchedulingService cancelAppointment should cancel appointment successfully" time="0.012">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: true
Received: false
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:315:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService cancelAppointment should prevent cancelling completed appointment" name="SchedulingService cancelAppointment should prevent cancelling completed appointment" time="0.019">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;N√£o √© poss√≠vel cancelar um agendamento j√° conclu√≠do&quot;
Received: &quot;Appointment_1.Appointment.findById(...).session is not a function&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:331:28)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getAvailableSlots should return available time slots" name="SchedulingService getAvailableSlots should return available time slots" time="0.012">
      <failure>TypeError: providers.map is not a function
    at SchedulingService.getAvailableSlots (/home/rebelde/development/topsmile/backend/src/services/schedulingService.ts:84:53)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:368:22)</failure>
    </testcase>
    <testcase classname="SchedulingService getAvailableSlots should return empty array for non-existent appointment type" name="SchedulingService getAvailableSlots should return empty array for non-existent appointment type" time="0.006">
      <failure>TypeError: AppointmentType_1.AppointmentType.findById(...).lean is not a function
    at SchedulingService.getAvailableSlots (/home/rebelde/development/topsmile/backend/src/services/schedulingService.ts:62:87)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:387:46)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="SchedulingService getAvailableSlots should return empty array when no providers available" name="SchedulingService getAvailableSlots should return empty array when no providers available" time="0.014">
      <failure>TypeError: AppointmentType_1.AppointmentType.findById(...).lean is not a function
    at SchedulingService.getAvailableSlots (/home/rebelde/development/topsmile/backend/src/services/schedulingService.ts:62:87)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:407:46)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
    <testcase classname="SchedulingService getAppointments should return appointments within date range" name="SchedulingService getAppointments should return appointments within date range" time="0.009">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;clinic&quot;: &quot;clinic-id&quot;, &quot;scheduledStart&quot;: {&quot;$gte&quot;: 2024-01-01T00:00:00.000Z, &quot;$lte&quot;: 2024-01-01T23:59:59.000Z}}

Number of calls: 0
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:443:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getAppointments should filter by provider and status" name="SchedulingService getAppointments should filter by provider and status" time="0.006">
      <failure>Error: expect(jest.fn()).toHaveBeenCalledWith(...expected)

Expected: {&quot;clinic&quot;: &quot;clinic-id&quot;, &quot;provider&quot;: &quot;provider-id&quot;, &quot;scheduledStart&quot;: {&quot;$gte&quot;: 2024-01-01T00:00:00.000Z, &quot;$lte&quot;: 2024-01-01T23:59:59.000Z}, &quot;status&quot;: &quot;confirmed&quot;}

Number of calls: 0
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:470:30)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getAppointmentConflicts should return no conflicts when slot is available" name="SchedulingService getAppointmentConflicts should return no conflicts when slot is available" time="0.014">
    </testcase>
    <testcase classname="SchedulingService getAppointmentConflicts should return conflicts when appointments overlap" name="SchedulingService getAppointmentConflicts should return conflicts when appointments overlap" time="0.013">
      <failure>Error: expect(received).toHaveLength(expected)

Matcher error: received value must have a length property whose value must be a number

Received has value: undefined
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:529:46)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="SchedulingService getProviderUtilization should calculate provider utilization correctly" name="SchedulingService getProviderUtilization should calculate provider utilization correctly" time="0.009">
      <failure>Error: Erro ao calcular utiliza√ß√£o do profissional
    at SchedulingService.getProviderUtilization (/home/rebelde/development/topsmile/backend/src/services/schedulingService.ts:818:19)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/schedulingService.test.ts:549:46)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Patient Routes Integration Tests" errors="0" failures="0" skipped="0" timestamp="2025-09-12T13:35:47" time="34.775" tests="23">
    <testcase classname="Patient Routes Integration Tests POST /api/patients should create a patient successfully" name="Patient Routes Integration Tests POST /api/patients should create a patient successfully" time="6.652">
    </testcase>
    <testcase classname="Patient Routes Integration Tests POST /api/patients should return 400 for invalid data" name="Patient Routes Integration Tests POST /api/patients should return 400 for invalid data" time="0.754">
    </testcase>
    <testcase classname="Patient Routes Integration Tests POST /api/patients should return 400 for duplicate phone in same clinic" name="Patient Routes Integration Tests POST /api/patients should return 400 for duplicate phone in same clinic" time="0.789">
    </testcase>
    <testcase classname="Patient Routes Integration Tests POST /api/patients should create patient with minimal required data" name="Patient Routes Integration Tests POST /api/patients should create patient with minimal required data" time="0.672">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should return paginated list of patients" name="Patient Routes Integration Tests GET /api/patients should return paginated list of patients" time="0.663">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should search patients by name" name="Patient Routes Integration Tests GET /api/patients should search patients by name" time="0.654">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should search patients by phone" name="Patient Routes Integration Tests GET /api/patients should search patients by phone" time="0.656">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should search patients by email" name="Patient Routes Integration Tests GET /api/patients should search patients by email" time="0.622">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should filter by status" name="Patient Routes Integration Tests GET /api/patients should filter by status" time="0.62">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should paginate results" name="Patient Routes Integration Tests GET /api/patients should paginate results" time="0.641">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients should sort results" name="Patient Routes Integration Tests GET /api/patients should sort results" time="0.636">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients/stats should return patient statistics" name="Patient Routes Integration Tests GET /api/patients/stats should return patient statistics" time="0.636">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients/:id should return patient by ID" name="Patient Routes Integration Tests GET /api/patients/:id should return patient by ID" time="0.629">
    </testcase>
    <testcase classname="Patient Routes Integration Tests GET /api/patients/:id should return 404 for non-existent patient" name="Patient Routes Integration Tests GET /api/patients/:id should return 404 for non-existent patient" time="0.688">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id should update patient successfully" name="Patient Routes Integration Tests PATCH /api/patients/:id should update patient successfully" time="0.614">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id should return 404 for non-existent patient" name="Patient Routes Integration Tests PATCH /api/patients/:id should return 404 for non-existent patient" time="0.593">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id should return 400 for invalid data" name="Patient Routes Integration Tests PATCH /api/patients/:id should return 400 for invalid data" time="0.57">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id/medical-history should update medical history successfully" name="Patient Routes Integration Tests PATCH /api/patients/:id/medical-history should update medical history successfully" time="0.602">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id/medical-history should update partial medical history" name="Patient Routes Integration Tests PATCH /api/patients/:id/medical-history should update partial medical history" time="0.603">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id/reactivate should reactivate patient successfully" name="Patient Routes Integration Tests PATCH /api/patients/:id/reactivate should reactivate patient successfully" time="0.608">
    </testcase>
    <testcase classname="Patient Routes Integration Tests PATCH /api/patients/:id/reactivate should return 404 for active patient" name="Patient Routes Integration Tests PATCH /api/patients/:id/reactivate should return 404 for active patient" time="0.596">
    </testcase>
    <testcase classname="Patient Routes Integration Tests DELETE /api/patients/:id should delete patient successfully" name="Patient Routes Integration Tests DELETE /api/patients/:id should delete patient successfully" time="0.725">
    </testcase>
    <testcase classname="Patient Routes Integration Tests DELETE /api/patients/:id should return 404 for non-existent patient" name="Patient Routes Integration Tests DELETE /api/patients/:id should return 404 for non-existent patient" time="0.637">
    </testcase>
  </testsuite>
  <testsuite name="AuthService" errors="0" failures="0" skipped="0" timestamp="2025-09-12T13:36:22" time="18.732" tests="11">
    <testcase classname="AuthService register should register a new user successfully" name="AuthService register should register a new user successfully" time="3.656">
    </testcase>
    <testcase classname="AuthService register should hash the password" name="AuthService register should hash the password" time="0.554">
    </testcase>
    <testcase classname="AuthService register should throw error for duplicate email" name="AuthService register should throw error for duplicate email" time="0.596">
    </testcase>
    <testcase classname="AuthService register should create clinic when clinic data is provided" name="AuthService register should create clinic when clinic data is provided" time="0.571">
    </testcase>
    <testcase classname="AuthService login should login user with correct credentials" name="AuthService login should login user with correct credentials" time="1.073">
    </testcase>
    <testcase classname="AuthService login should throw error for invalid email" name="AuthService login should throw error for invalid email" time="0.023">
    </testcase>
    <testcase classname="AuthService login should throw error for invalid password" name="AuthService login should throw error for invalid password" time="1.058">
    </testcase>
    <testcase classname="AuthService getUserById should return user by ID" name="AuthService getUserById should return user by ID" time="0.55">
    </testcase>
    <testcase classname="AuthService getUserById should return null for non-existent user" name="AuthService getUserById should return null for non-existent user" time="0.02">
    </testcase>
    <testcase classname="AuthService changePassword should change password successfully" name="AuthService changePassword should change password successfully" time="2.244">
    </testcase>
    <testcase classname="AuthService changePassword should throw error for incorrect current password" name="AuthService changePassword should throw error for incorrect current password" time="1.041">
    </testcase>
  </testsuite>
  <testsuite name="Database Setup Test" errors="0" failures="0" skipped="0" timestamp="2025-09-12T13:36:40" time="4.762" tests="1">
    <testcase classname="Database Setup Test should connect to database" name="Database Setup Test should connect to database" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="PatientService" errors="0" failures="2" skipped="0" timestamp="2025-09-12T13:36:45" time="25.567" tests="22">
    <testcase classname="PatientService createPatient should create a new patient successfully" name="PatientService createPatient should create a new patient successfully" time="3.692">
    </testcase>
    <testcase classname="PatientService createPatient should create patient without optional fields" name="PatientService createPatient should create patient without optional fields" time="0.771">
    </testcase>
    <testcase classname="PatientService createPatient should throw error for duplicate phone" name="PatientService createPatient should throw error for duplicate phone" time="0.609">
    </testcase>
    <testcase classname="PatientService createPatient should validate required fields" name="PatientService createPatient should validate required fields" time="0.594">
    </testcase>
    <testcase classname="PatientService getPatientById should return patient by ID" name="PatientService getPatientById should return patient by ID" time="0.561">
    </testcase>
    <testcase classname="PatientService getPatientById should return null for non-existent patient" name="PatientService getPatientById should return null for non-existent patient" time="0.533">
    </testcase>
    <testcase classname="PatientService getPatientsByClinic should return all active patients for clinic" name="PatientService getPatientsByClinic should return all active patients for clinic" time="0.618">
      <failure>Error: expect(received).toBe(expected) // Object.is equality

Expected: &quot;68c421fc00edc9933f8973c9&quot;
Received: &quot;{ _id: new ObjectId(&apos;68c421fc00edc9933f8973c9&apos;), name: &apos;Test Clinic&apos; }&quot;
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/patientService.test.ts:162:43)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)</failure>
    </testcase>
    <testcase classname="PatientService getPatientsByClinic should return inactive patients when specified" name="PatientService getPatientsByClinic should return inactive patients when specified" time="0.622">
    </testcase>
    <testcase classname="PatientService updatePatient should update patient successfully" name="PatientService updatePatient should update patient successfully" time="0.55">
    </testcase>
    <testcase classname="PatientService updatePatient should return null for non-existent patient" name="PatientService updatePatient should return null for non-existent patient" time="0.525">
    </testcase>
    <testcase classname="PatientService updatePatient should update medical history" name="PatientService updatePatient should update medical history" time="0.542">
    </testcase>
    <testcase classname="PatientService deletePatient should delete patient successfully" name="PatientService deletePatient should delete patient successfully" time="0.547">
    </testcase>
    <testcase classname="PatientService deletePatient should return false for non-existent patient" name="PatientService deletePatient should return false for non-existent patient" time="0.52">
    </testcase>
    <testcase classname="PatientService searchPatients should search patients by name" name="PatientService searchPatients should search patients by name" time="0.579">
    </testcase>
    <testcase classname="PatientService searchPatients should search patients by phone" name="PatientService searchPatients should search patients by phone" time="0.563">
    </testcase>
    <testcase classname="PatientService searchPatients should search patients by email" name="PatientService searchPatients should search patients by email" time="0.58">
    </testcase>
    <testcase classname="PatientService searchPatients should return empty array for no matches" name="PatientService searchPatients should return empty array for no matches" time="0.556">
    </testcase>
    <testcase classname="PatientService searchPatients should paginate results" name="PatientService searchPatients should paginate results" time="0.58">
    </testcase>
    <testcase classname="PatientService getPatientStats should return correct patient statistics" name="PatientService getPatientStats should return correct patient statistics" time="0.615">
    </testcase>
    <testcase classname="PatientService updateMedicalHistory should update medical history successfully" name="PatientService updateMedicalHistory should update medical history successfully" time="0.542">
    </testcase>
    <testcase classname="PatientService reactivatePatient should reactivate inactive patient" name="PatientService reactivatePatient should reactivate inactive patient" time="0.563">
    </testcase>
    <testcase classname="PatientService reactivatePatient should throw error for non-existent patient" name="PatientService reactivatePatient should throw error for non-existent patient" time="0.522">
      <failure>Error: expect(received).rejects.toThrow()

Received promise resolved instead of rejected
Resolved to value: null
    at expect (/home/rebelde/development/topsmile/backend/node_modules/expect/build/index.js:113:15)
    at Object.&lt;anonymous&gt; (/home/rebelde/development/topsmile/backend/tests/unit/services/patientService.test.ts:435:13)
    at Promise.then.completed (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:298:28)
    at new Promise (&lt;anonymous&gt;)
    at callAsyncCircusFn (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/utils.js:231:10)
    at _callCircusTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:316:40)
    at processTicksAndRejections (node:internal/process/task_queues:105:5)
    at _runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:252:3)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:126:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at _runTestsForDescribeBlock (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:121:9)
    at run (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/run.js:71:3)
    at runAndTransformResultsToJestFormat (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapterInit.js:122:21)
    at jestAdapter (/home/rebelde/development/topsmile/backend/node_modules/jest-circus/build/legacy-code-todo-rewrite/jestAdapter.js:79:19)
    at runTestInternal (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:367:16)
    at runTest (/home/rebelde/development/topsmile/backend/node_modules/jest-runner/build/runTest.js:444:34)</failure>
    </testcase>
  </testsuite>
  <testsuite name="AppointmentService" errors="0" failures="21" skipped="0" timestamp="2025-09-12T13:37:14" time="24.863" tests="21">
    <testcase classname="AppointmentService createAppointment should create a new appointment successfully" name="AppointmentService createAppointment should create a new appointment successfully" time="5.534">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService createAppointment should create appointment with reminders" name="AppointmentService createAppointment should create appointment with reminders" time="0.877">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService createAppointment should throw error for overlapping appointments" name="AppointmentService createAppointment should throw error for overlapping appointments" time="0.824">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService createAppointment should validate required fields" name="AppointmentService createAppointment should validate required fields" time="0.689">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointmentById should return appointment by ID" name="AppointmentService getAppointmentById should return appointment by ID" time="0.785">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointmentById should return null for non-existent appointment" name="AppointmentService getAppointmentById should return null for non-existent appointment" time="0.547">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointments should return appointments for clinic" name="AppointmentService getAppointments should return appointments for clinic" time="0.539">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointments should filter appointments by status" name="AppointmentService getAppointments should filter appointments by status" time="0.53">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointments should filter appointments by date range" name="AppointmentService getAppointments should filter appointments by date range" time="0.533">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointments should filter appointments by provider" name="AppointmentService getAppointments should filter appointments by provider" time="0.524">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService updateAppointment should update appointment successfully" name="AppointmentService updateAppointment should update appointment successfully" time="0.531">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService updateAppointment should update appointment time" name="AppointmentService updateAppointment should update appointment time" time="0.522">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService updateAppointment should return null for non-existent appointment" name="AppointmentService updateAppointment should return null for non-existent appointment" time="0.531">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService cancelAppointment should cancel appointment successfully" name="AppointmentService cancelAppointment should cancel appointment successfully" time="0.532">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService cancelAppointment should return null for non-existent appointment" name="AppointmentService cancelAppointment should return null for non-existent appointment" time="0.533">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService checkAvailability should return available time slots" name="AppointmentService checkAvailability should return available time slots" time="0.538">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService checkAvailability should exclude booked time slots" name="AppointmentService checkAvailability should exclude booked time slots" time="0.521">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointmentStats should return correct appointment statistics" name="AppointmentService getAppointmentStats should return correct appointment statistics" time="0.536">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService getAppointmentStats should return statistics for date range" name="AppointmentService getAppointmentStats should return statistics for date range" time="0.546">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService rescheduleAppointment should reschedule appointment successfully" name="AppointmentService rescheduleAppointment should reschedule appointment successfully" time="0.534">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
    <testcase classname="AppointmentService rescheduleAppointment should throw error for conflicting time slot" name="AppointmentService rescheduleAppointment should throw error for conflicting time slot" time="0.537">
      <failure>ValidationError: Provider validation failed: specialties.0: `Odontologia Geral` is not a valid enum value for path `specialties.0`.
    at model.Object.&lt;anonymous&gt;.Document.invalidate (/home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3358:32)
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/document.js:3119:17
    at /home/rebelde/development/topsmile/backend/node_modules/mongoose/lib/schemaType.js:1416:9
    at processTicksAndRejections (node:internal/process/task_queues:85:11)</failure>
    </testcase>
  </testsuite>
  <testsuite name="Performance Tests" errors="0" failures="0" skipped="0" timestamp="2025-09-12T13:37:39" time="20.714" tests="5">
    <testcase classname="Performance Tests Load Testing should handle multiple concurrent login requests" name="Performance Tests Load Testing should handle multiple concurrent login requests" time="6.075">
    </testcase>
    <testcase classname="Performance Tests Load Testing should handle rapid successive auth requests" name="Performance Tests Load Testing should handle rapid successive auth requests" time="0.861">
    </testcase>
    <testcase classname="Performance Tests Memory Usage should not have memory leaks with repeated requests" name="Performance Tests Memory Usage should not have memory leaks with repeated requests" time="1.592">
    </testcase>
    <testcase classname="Performance Tests Database Query Performance should handle database load efficiently" name="Performance Tests Database Query Performance should handle database load efficiently" time="5.309">
    </testcase>
    <testcase classname="Performance Tests Response Time Benchmarks should respond quickly to auth endpoints" name="Performance Tests Response Time Benchmarks should respond quickly to auth endpoints" time="0.551">
    </testcase>
  </testsuite>
</testsuites>