[
  {
    "id": "FT001",
    "title": "MSW Setup Conflicts Between Test Files",
    "severity": "Critical", 
    "file": "src/setupTests.ts",
    "lineRange": "4-5",
    "description": "Multiple MSW server instances are created - one in setupTests.ts importing from mocks/server, and individual test files have conflicting handler setups. This causes unpredictable mock behavior.",
    "reproduction": "1. Run npm test 2. Notice MSW warnings about duplicate servers 3. API mocks fail inconsistently",
    "suggestedFixPatchRef": "patches/msw-setup-fix.patch",
    "testsSuggested": ["Test MSW server lifecycle", "Test handler precedence"],
    "confidence": "High"
  },
  {
    "id": "FT002", 
    "title": "Incomplete Authentication Flow Integration Tests",
    "severity": "Critical",
    "file": "src/tests/contexts/AuthContext.test.tsx", 
    "lineRange": "200-300",
    "description": "Authentication tests don't cover token refresh scenarios, cross-tab synchronization, or race conditions in auth state management. Missing complete login-to-logout flow tests.",
    "reproduction": "1. Run AuthContext tests 2. Notice missing token refresh tests 3. Cross-tab auth sync not tested",
    "suggestedFixPatchRef": "patches/auth-flow-tests.patch",
    "testsSuggested": ["Token refresh integration test", "Cross-tab sync test", "Auth race condition test"],
    "confidence": "High"
  },
  {
    "id": "FT003",
    "title": "API Service Error Handling Not Thoroughly Tested",
    "severity": "High",
    "file": "src/tests/services/apiService.test.ts",
    "lineRange": "50-150",
    "description": "Tests don't cover network timeouts, retry logic, malformed responses, or integration with error boundaries. Missing edge cases for API failures.",
    "reproduction": "1. Mock network timeout 2. Current tests don't verify retry behavior 3. Error boundary integration missing",
    "suggestedFixPatchRef": "patches/api-error-tests.patch", 
    "testsSuggested": ["Network timeout test", "Retry logic test", "Malformed response test"],
    "confidence": "High"
  },
  {
    "id": "FT004",
    "title": "Missing Comprehensive Accessibility Test Coverage",
    "severity": "High",
    "file": "src/tests/accessibility.test.tsx",
    "lineRange": "1-50", 
    "description": "Only basic button accessibility is tested. Missing screen reader announcements, keyboard navigation, focus management, and ARIA validation tests.",
    "reproduction": "1. Review accessibility test file 2. Notice limited coverage 3. No axe-core integration",
    "suggestedFixPatchRef": "patches/accessibility-tests.patch",
    "testsSuggested": ["Screen reader announcement test", "Keyboard navigation test", "ARIA validation test"],
    "confidence": "High"
  },
  {
    "id": "FT005",
    "title": "Patient Auth Context Tests Incomplete",
    "severity": "High",
    "file": "src/tests/contexts/PatientAuthContext.test.tsx",
    "lineRange": "100-200",
    "description": "Patient authentication tests don't cover registration flow, profile updates, or integration with appointment booking. Missing patient-specific workflows.",
    "reproduction": "1. Run PatientAuthContext tests 2. Notice missing registration tests 3. Profile update flows not tested",
    "suggestedFixPatchRef": "patches/patient-auth-tests.patch",
    "testsSuggested": ["Patient registration flow test", "Profile update test", "Appointment integration test"],
    "confidence": "High"
  },
  {
    "id": "FT006", 
    "title": "Payment Service Integration Tests Insufficient",
    "severity": "High",
    "file": "src/tests/services/paymentService.test.ts",
    "lineRange": "200-400",
    "description": "Payment service tests use extensive mocking but don't test integration with Stripe SDK properly. Missing real Stripe error scenarios and retry behavior.",
    "reproduction": "1. Review payment tests 2. Notice over-mocking 3. Real Stripe integration not tested",
    "suggestedFixPatchRef": "patches/payment-integration-tests.patch",
    "testsSuggested": ["Stripe SDK integration test", "Payment error handling test", "Retry mechanism test"],
    "confidence": "Medium"
  },
  {
    "id": "FT007",
    "title": "Form Validation Tests Missing",
    "severity": "Medium", 
    "file": "src/tests/components/UI/Form/FormField.test.tsx",
    "lineRange": "20-40",
    "description": "Form validation tests are basic and don't cover real-time validation, server-side errors, or complex form state management scenarios.",
    "reproduction": "1. Review FormField tests 2. Notice basic coverage 3. Complex validation scenarios missing",
    "suggestedFixPatchRef": "patches/form-validation-tests.patch",
    "testsSuggested": ["Real-time validation test", "Server error display test", "Form state persistence test"],
    "confidence": "High"
  },
  {
    "id": "FT008",
    "title": "Inconsistent Test Utilities Usage",
    "severity": "Medium",
    "file": "Multiple test files",
    "lineRange": "N/A",
    "description": "Test files inconsistently use custom render utilities vs default render. Some files duplicate provider setup instead of using test-utils.tsx.",
    "reproduction": "1. Compare test files 2. Notice mixed render patterns 3. Duplicated provider setup",
    "suggestedFixPatchRef": "patches/test-utils-consistency.patch",
    "testsSuggested": ["Standardized render test", "Provider setup test"],
    "confidence": "High"
  },
  {
    "id": "FT009",
    "title": "Mock Data Type Safety Issues",
    "severity": "Medium",
    "file": "src/tests/utils/mockData.ts",
    "lineRange": "1-100", 
    "description": "Mock data generation doesn't consistently use @topsmile/types, leading to potential type safety issues and runtime errors not caught in tests.",
    "reproduction": "1. Review mockData.ts 2. Notice type inconsistencies 3. Compare with @topsmile/types",
    "suggestedFixPatchRef": "patches/mock-data-types.patch",
    "testsSuggested": ["Type safety validation test", "Mock data consistency test"],
    "confidence": "Medium"
  },
  {
    "id": "FT010",
    "title": "Missing Error Boundary Tests",
    "severity": "Medium",
    "file": "Missing",
    "lineRange": "N/A",
    "description": "No tests for error boundary behavior, component crash recovery, or error boundary integration with API errors.",
    "reproduction": "1. Search for error boundary tests 2. None found 3. Component error handling not tested",
    "suggestedFixPatchRef": "patches/error-boundary-tests.patch", 
    "testsSuggested": ["Error boundary catch test", "Component crash recovery test", "API error boundary test"],
    "confidence": "High"
  },
  {
    "id": "FT011",
    "title": "Component Over-rendering in Tests",
    "severity": "Low",
    "file": "Multiple component test files",
    "lineRange": "Various",
    "description": "Component tests don't use act() appropriately and have race conditions with async state updates, causing excessive re-renders and flaky tests.",
    "reproduction": "1. Run component tests with React DevTools 2. Notice excessive renders 3. Some tests flaky due to timing",
    "suggestedFixPatchRef": "patches/test-performance.patch",
    "testsSuggested": ["Render optimization test", "Async state test"],
    "confidence": "Medium"
  },
  {
    "id": "FT012", 
    "title": "E2E Test Files Missing",
    "severity": "Low",
    "file": "cypress/ directory",
    "lineRange": "N/A",
    "description": "Cypress is configured but no actual E2E test files exist. Critical user workflows not covered by E2E tests.",
    "reproduction": "1. Check cypress/ directory 2. Only config files exist 3. No test specs found",
    "suggestedFixPatchRef": "patches/cypress-e2e-tests.patch",
    "testsSuggested": ["Login E2E test", "Appointment booking E2E test", "Patient portal E2E test"],
    "confidence": "High"
  }
]